### YamlMime:UniversalReference
items:
  - uid: excel_1_7.Excel.ChartLegendEntryCollection
    summary: |-
      Represents a collection of legendEntries.

      \[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: Excel.ChartLegendEntryCollection
    fullName: Excel.ChartLegendEntryCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel_1_7
    children:
      - excel_1_7.Excel.ChartLegendEntryCollection.context
      - excel_1_7.Excel.ChartLegendEntryCollection.getCount
      - excel_1_7.Excel.ChartLegendEntryCollection.getItemAt
      - excel_1_7.Excel.ChartLegendEntryCollection.items
      - excel_1_7.Excel.ChartLegendEntryCollection.load
      - excel_1_7.Excel.ChartLegendEntryCollection.load_1
      - excel_1_7.Excel.ChartLegendEntryCollection.load_2
      - excel_1_7.Excel.ChartLegendEntryCollection.toJSON
  - uid: excel_1_7.Excel.ChartLegendEntryCollection.context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel_1_7.Excel.RequestContext
  - uid: excel_1_7.Excel.ChartLegendEntryCollection.getCount
    summary: |-
      Returns the number of legendEntry in the collection.

      \[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel_1_7.Excel.ChartLegendEntryCollection.getItemAt
    summary: |-
      Returns a legendEntry at the given index.

      \[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartLegendEntry;'
      return:
        type:
          - excel_1_7.Excel.ChartLegendEntry
        description: ''
      parameters:
        - id: index
          description: Index of the legendEntry to be retrieved.
          type:
            - number
  - uid: excel_1_7.Excel.ChartLegendEntryCollection.items
    summary: Gets the loaded child items in this collection.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartLegendEntry[];'
      return:
        type:
          - 'Excel.ChartLegendEntry[]'
  - uid: excel_1_7.Excel.ChartLegendEntryCollection.load
    summary: >-
      Queues up a command to load the specified properties of the object. You must call "context.sync()" before reading
      the properties.
    remarks: >-
      In addition to this signature, this method has the following signatures:


      `load(option?: string | string[]): Excel.ChartLegendEntryCollection` - Where option is a comma-delimited string or
      an array of strings that specify the properties to load.


      `load(option?: { select?: string; expand?: string; }): Excel.ChartLegendEntryCollection` - Where option.select is
      a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string
      that specifies the navigation properties to load.


      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }):
      Excel.ChartLegendEntryCollection` - Only available on collection types. It is similar to the preceding signature.
      Option.top specifies the maximum number of collection items that can be included in the result. Option.skip
      specifies the number of items that are to be skipped and not included in the result. If option.top is specified,
      the result set will start after skipping the specified number of items.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        load(option?: Excel.Interfaces.ChartLegendEntryCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions):
        Excel.ChartLegendEntryCollection;
      return:
        type:
          - excel_1_7.Excel.ChartLegendEntryCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ChartLegendEntryCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel_1_7.Excel.ChartLegendEntryCollection.load_1
    summary: >-
      Queues up a command to load the specified properties of the object. You must call `context.sync()` before reading
      the properties.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartLegendEntryCollection;'
      return:
        type:
          - excel_1_7.Excel.ChartLegendEntryCollection
        description: ''
      parameters:
        - id: propertyNames
          description: A comma-delimited string or an array of strings that specify the properties to load.
          type:
            - 'string | string[]'
  - uid: excel_1_7.Excel.ChartLegendEntryCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartLegendEntryCollection;'
      return:
        type:
          - excel_1_7.Excel.ChartLegendEntryCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel_1_7.Excel.ChartLegendEntryCollection.toJSON
    summary: >-
      Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to
      `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is
      passed to it.) Whereas the original `Excel.ChartLegendEntryCollection` object is an API object, the `toJSON`
      method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartLegendEntryCollectionData`<!-- -->) that
      contains an "items" array with shallow copies of any loaded properties from the collection's items.
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartLegendEntryCollectionData;'
      return:
        type:
          - excel_1_7.Excel.Interfaces.ChartLegendEntryCollectionData
        description: ''
